name: Build and Push Docker Images

permissions:
  id-token: write
  contents: read
  attestations: write
  packages: write

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:

        service: [worker-cli, server, worker]
        include:
          - service: server
            dockerfile: docker/docker/server/Dockerfile
            context: docker/docker/server
            component: server
          - service: worker
            dockerfile: docker/docker/worker/Dockerfile
            context: docker/docker/worker
            component: worker
          - service: worker-cli
            dockerfile: docker/docker/worker-cli/Dockerfile
            context: docker/docker/worker-cli
            component: worker-cli
 

    env:
      REGISTRY: docker.io
      IMAGE_NAME: tcosolutions/betterscan-${{ matrix.component }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.6.1

      - name: Login to Docker Hub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        id: build-push
        uses: docker/build-push-action@v6.7.0
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          platforms: linux/amd64, linux/arm64
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/betterscan-${{ matrix.component }}
          subject-digest: ${{ steps.build-push.outputs.digest }}
          push-to-registry: true
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKER_HUB_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}


      # Install Grype
      - name: Install Grype
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin
          
      # Generate SBOM with Grype
      - name: Generate SBOM with Grype
        run: |   
          grype ${{ env.IMAGE_NAME }}:${{ github.sha }} -o spdx-json > sbom.spdx.json    
    
      - name: Generate SBOM attestation
        uses: actions/attest-sbom@v1.4.1
        with:
          subject-name: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/betterscan-${{ matrix.component }}
          subject-digest: ${{ steps.build-push.outputs.digest }}
          sbom-path: 'sbom.spdx.json'
          push-to-registry: true
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKER_HUB_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
